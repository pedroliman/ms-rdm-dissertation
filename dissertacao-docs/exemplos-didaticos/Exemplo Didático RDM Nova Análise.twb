<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='win' version='10.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='ExemploDidticoRDMNovaAnlise' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
        <calculation class='tableau' formula='964.0' />
      </column>
    </datasource>
    <datasource caption='Percentis' inline='true' name='federated.0rz130h1jij93l1grq23h11egigb' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Exemplo-Didatico-RDM' name='excel-direct.16dduin0wapzi715bjlds03mfng3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\Google Drive\Pedro\Estudos\MS Eng. Produção\Dissertação\Exemplo-Didatico-RDM.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.16dduin0wapzi715bjlds03mfng3' name='Resultados_Percentis_Estrats' table='[Resultados_Percentis_Estrats$]' type='table'>
          <columns gridOrigin='A1:L4:no:A1:L4:0' header='yes' outcome='6'>
            <column datatype='string' name='Estratégia' ordinal='0' />
            <column datatype='real' name='Média Geral' ordinal='1' />
            <column datatype='real' name='Média Cenário X' ordinal='2' />
            <column datatype='real' name='% Casos Inaceitáveis' ordinal='3' />
            <column datatype='real' name='Percentil 25% Geral' ordinal='4' />
            <column datatype='real' name='Percentil 50% Geral' ordinal='5' />
            <column datatype='real' name='Percentil 75% Geral' ordinal='6' />
            <column datatype='real' name='Percentil 100% Geral' ordinal='7' />
            <column datatype='real' name='Percentil 25% Cenário X' ordinal='8' />
            <column datatype='integer' name='Percentil 50% Cenário X' ordinal='9' />
            <column datatype='real' name='Percentil 75% Cenário X' ordinal='10' />
            <column datatype='real' name='Percentil 100% Cenário X' ordinal='11' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Estratégia</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Estratégia]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Estratégia</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Média Geral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Média Geral]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Média Geral</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Média Cenário X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Média Cenário X]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Média Cenário X</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Casos Inaceitáveis</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Casos Inaceitáveis]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>% Casos Inaceitáveis</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentil 25% Geral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentil 25% Geral]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Percentil 25% Geral</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentil 50% Geral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentil 50% Geral]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Percentil 50% Geral</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentil 75% Geral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentil 75% Geral]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Percentil 75% Geral</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentil 100% Geral</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentil 100% Geral]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Percentil 100% Geral</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentil 25% Cenário X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentil 25% Cenário X]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Percentil 25% Cenário X</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentil 50% Cenário X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Percentil 50% Cenário X]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Percentil 50% Cenário X</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentil 75% Cenário X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentil 75% Cenário X]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Percentil 75% Cenário X</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentil 100% Cenário X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentil 100% Cenário X]</local-name>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias>Percentil 100% Cenário X</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Resultados_Percentis_Estrats]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L4:no:A1:L4:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:\Google Drive\Pedro\Estudos\MS Eng. Produção\Dissertação\Imagens Exemplo Didático\Percentis.tde' schema='Extract' tablename='Extract' update-time='01/27/2017 01:56:19 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3' timestamp-start='2017-01-27 13:56:19.152' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>% Casos Inaceitáveis</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% Casos Inaceitáveis]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% Casos Inaceitáveis</remote-alias>
              <ordinal>0</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.1699999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>0.38999999999999996</statistic>
                <statistic aggregation='Min' datatype='real'>0.19</statistic>
                <statistic aggregation='Max' datatype='real'>0.68999999999999995</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.26457513110645908</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.21602468994692872</statistic>
                <statistic aggregation='Var' datatype='real'>0.070000000000000021</statistic>
                <statistic aggregation='VarP' datatype='real'>0.046666666666666683</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.59629999999999994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estratégia</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Estratégia]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estratégia</remote-alias>
              <ordinal>1</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;C&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;B&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Média Cenário X</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Média Cenário X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Média Cenário X</remote-alias>
              <ordinal>2</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5655.6190476190477</statistic>
                <statistic aggregation='Avg' datatype='real'>1885.2063492063492</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4063.5238095238096</statistic>
                <statistic aggregation='Stdev' datatype='real'>2047.5575767812527</statistic>
                <statistic aggregation='StdevP' datatype='real'>1671.8237606945527</statistic>
                <statistic aggregation='Var' datatype='real'>4192492.0302343159</statistic>
                <statistic aggregation='VarP' datatype='real'>2794994.6868228773</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='Median' datatype='real'>1592.0952380952381</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19046992.997732427</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Média Geral</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Média Geral]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Média Geral</remote-alias>
              <ordinal>3</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3195.23</statistic>
                <statistic aggregation='Avg' datatype='real'>1065.0766666666666</statistic>
                <statistic aggregation='Min' datatype='real'>477.38999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>2076.77</statistic>
                <statistic aggregation='Stdev' datatype='real'>879.96609942277507</statistic>
                <statistic aggregation='StdevP' datatype='real'>718.48931151100328</statistic>
                <statistic aggregation='Var' datatype='real'>774340.33613333327</statistic>
                <statistic aggregation='VarP' datatype='real'>516226.89075555548</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4951845.5899</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentil 100% Cenário X</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Percentil 100% Cenário X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentil 100% Cenário X</remote-alias>
              <ordinal>5</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7944.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2648.0</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>5322.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>2661.0952632327917</statistic>
                <statistic aggregation='StdevP' datatype='real'>2172.7751839525413</statistic>
                <statistic aggregation='Var' datatype='real'>7081428.0</statistic>
                <statistic aggregation='VarP' datatype='real'>4720952.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='Median' datatype='real'>2622.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>35198568.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentil 100% Geral</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percentil 100% Geral]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentil 100% Geral</remote-alias>
              <ordinal>6</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11037.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3679.0</statistic>
                <statistic aggregation='Min' datatype='real'>2622.0</statistic>
                <statistic aggregation='Max' datatype='real'>5322.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1442.2368044118136</statistic>
                <statistic aggregation='StdevP' datatype='real'>1177.5814196903755</statistic>
                <statistic aggregation='Var' datatype='real'>2080047.0</statistic>
                <statistic aggregation='VarP' datatype='real'>1386698.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>44765217.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentil 25% Cenário X</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Percentil 25% Cenário X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentil 25% Cenário X</remote-alias>
              <ordinal>7</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4766.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1588.6666666666667</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>3516.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1782.2977678640943</statistic>
                <statistic aggregation='StdevP' datatype='real'>1455.2400336561509</statistic>
                <statistic aggregation='Var' datatype='real'>3176585.3333333335</statistic>
                <statistic aggregation='VarP' datatype='real'>2117723.5555555555</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='Median' datatype='real'>1250.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13924756.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentil 25% Geral</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Percentil 25% Geral]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentil 25% Geral</remote-alias>
              <ordinal>8</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>777.5</statistic>
                <statistic aggregation='Avg' datatype='real'>259.16666666666669</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>777.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>448.88983429493402</statistic>
                <statistic aggregation='StdevP' datatype='real'>366.51701491502712</statistic>
                <statistic aggregation='Var' datatype='real'>201502.08333333334</statistic>
                <statistic aggregation='VarP' datatype='real'>134334.72222222222</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='Median' datatype='real'>0.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>604506.25</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentil 50% Cenário X</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Percentil 50% Cenário X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentil 50% Cenário X</remote-alias>
              <ordinal>9</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6021.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2007.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>4311</statistic>
                <statistic aggregation='Stdev' datatype='real'>2170.7917910292549</statistic>
                <statistic aggregation='StdevP' datatype='real'>1772.4440752813614</statistic>
                <statistic aggregation='Var' datatype='real'>4712337.0</statistic>
                <statistic aggregation='VarP' datatype='real'>3141558.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='Median' datatype='integer'>1710</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>21508821.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentil 50% Geral</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Percentil 50% Geral]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentil 50% Geral</remote-alias>
              <ordinal>10</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2640.0</statistic>
                <statistic aggregation='Avg' datatype='real'>880.0</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2170.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1141.6216536138406</statistic>
                <statistic aggregation='StdevP' datatype='real'>932.13017688875766</statistic>
                <statistic aggregation='Var' datatype='real'>1303300.0</statistic>
                <statistic aggregation='VarP' datatype='real'>868866.66666666663</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4929800.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentil 75% Cenário X</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Percentil 75% Cenário X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentil 75% Cenário X</remote-alias>
              <ordinal>11</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6728.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2242.6666666666665</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4668.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>2339.3548968323153</statistic>
                <statistic aggregation='StdevP' datatype='real'>1910.0752748401189</statistic>
                <statistic aggregation='Var' datatype='real'>5472581.333333333</statistic>
                <statistic aggregation='VarP' datatype='real'>3648387.5555555555</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='Median' datatype='real'>2060.0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26033824.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentil 75% Geral</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percentil 75% Geral]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentil 75% Geral</remote-alias>
              <ordinal>12</ordinal>
              <family>Resultados_Percentis_Estrats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4701.25</statistic>
                <statistic aggregation='Avg' datatype='real'>1567.0833333333333</statistic>
                <statistic aggregation='Min' datatype='real'>753.99999999999955</statistic>
                <statistic aggregation='Max' datatype='real'>2947.25</statistic>
                <statistic aggregation='Stdev' datatype='real'>1201.571479702033</statistic>
                <statistic aggregation='StdevP' datatype='real'>981.07900491697853</statistic>
                <statistic aggregation='Var' datatype='real'>1443774.0208333333</statistic>
                <statistic aggregation='VarP' datatype='real'>962516.01388888888</statistic>
                <statistic aggregation='Count' datatype='integer'>3</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10254798.5625</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.167849' measure-ordering='alphabetic' measure-percentage='0.711584' parameter-percentage='0.120567' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='TradeOffs' inline='true' name='federated.0t38qfi1kae88c18lgad40vd782h' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Exemplo-Didatico-RDM' name='excel-direct.05e3iou0wjyu5j12wc3uc0e794j9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\Google Drive\Pedro\Estudos\MS Eng. Produção\Dissertação\Exemplo-Didatico-RDM.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.05e3iou0wjyu5j12wc3uc0e794j9' name='Resultado_TradeOffCenárioX' table='[Resultado_TradeOffCenárioX$]' type='table'>
          <columns gridOrigin='A1:I16:no:A1:I16:0' header='yes' outcome='6'>
            <column datatype='real' name='odds Cenario X' ordinal='0' />
            <column datatype='real' name='prob cenário C' ordinal='1' />
            <column datatype='real' name='prob cenário C não acontecer' ordinal='2' />
            <column datatype='real' name='prob relativa c' ordinal='3' />
            <column datatype='real' name='prob relativa c alt' ordinal='4' />
            <column datatype='string' name='Estratégia' ordinal='5' />
            <column datatype='real' name='Arrependimento Esperado' ordinal='6' />
            <column datatype='real' name='Média com Cenário' ordinal='7' />
            <column datatype='real' name='Média Sem Cenário' ordinal='8' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>odds Cenario X</remote-name>
            <remote-type>5</remote-type>
            <local-name>[odds Cenario X]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>odds Cenario X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prob cenário C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prob cenário C]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>prob cenário C</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prob cenário C não acontecer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prob cenário C não acontecer]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>prob cenário C não acontecer</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prob relativa c</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prob relativa c]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>prob relativa c</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prob relativa c alt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prob relativa c alt]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>prob relativa c alt</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estratégia</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Estratégia]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>Estratégia</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrependimento Esperado</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arrependimento Esperado]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>Arrependimento Esperado</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Média com Cenário</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Média com Cenário]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>Média com Cenário</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Média Sem Cenário</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Média Sem Cenário]</local-name>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias>Média Sem Cenário</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Resultado_TradeOffCenárioX]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I16:no:A1:I16:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='real' name='[odds Cenario X]' role='dimension' type='ordinal' />
      <column caption='Prob Relativa C Alt' datatype='real' name='[prob relativa c alt]' role='measure' type='quantitative' />
      <column caption='Prob Relativa C' datatype='real' name='[prob relativa c]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:\Google Drive\Pedro\Estudos\MS Eng. Produção\Dissertação\Imagens Exemplo Didático\TradeOffs.tde' schema='Extract' tablename='Extract' update-time='01/27/2017 01:56:55 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='15' timestamp-start='2017-01-27 13:56:55.172' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Arrependimento Esperado</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Arrependimento Esperado]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arrependimento Esperado</remote-alias>
              <ordinal>0</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20520.675183650372</statistic>
                <statistic aggregation='Avg' datatype='real'>1368.0450122433581</statistic>
                <statistic aggregation='Min' datatype='real'>8.0344654718636495</statistic>
                <statistic aggregation='Max' datatype='real'>4038.6240249703092</statistic>
                <statistic aggregation='Stdev' datatype='real'>1294.0864990966627</statistic>
                <statistic aggregation='StdevP' datatype='real'>1250.2063333711385</statistic>
                <statistic aggregation='Var' datatype='real'>1674659.8671442568</statistic>
                <statistic aggregation='VarP' datatype='real'>1563015.8760013063</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>51518445.472878546</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estratégia</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Estratégia]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estratégia</remote-alias>
              <ordinal>1</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;C&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;B&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Média Sem Cenário</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Média Sem Cenário]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Média Sem Cenário</remote-alias>
              <ordinal>2</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>12706.012658227848</statistic>
                <statistic aggregation='Avg' datatype='real'>847.06751054852316</statistic>
                <statistic aggregation='Min' datatype='real'>181.07594936708861</statistic>
                <statistic aggregation='Max' datatype='real'>1548.6455696202531</statistic>
                <statistic aggregation='Stdev' datatype='real'>578.4903170469529</statistic>
                <statistic aggregation='StdevP' datatype='real'>558.87474188999795</statistic>
                <statistic aggregation='Var' datatype='real'>334651.04691708414</statistic>
                <statistic aggregation='VarP' datatype='real'>312340.97712261189</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15447965.168242266</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Média com Cenário</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Média com Cenário]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Média com Cenário</remote-alias>
              <ordinal>3</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>28278.095238095237</statistic>
                <statistic aggregation='Avg' datatype='real'>1885.2063492063492</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4063.5238095238096</statistic>
                <statistic aggregation='Stdev' datatype='real'>1730.5019978182872</statistic>
                <statistic aggregation='StdevP' datatype='real'>1671.8237606945527</statistic>
                <statistic aggregation='Var' datatype='real'>2994637.1644530832</statistic>
                <statistic aggregation='VarP' datatype='real'>2794994.6868228773</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='Median' datatype='real'>1592.0952380952381</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>95234964.988662139</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>odds Cenario X</remote-name>
              <remote-type>5</remote-type>
              <local-name>[odds Cenario X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>odds Cenario X</remote-alias>
              <ordinal>5</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>333.36363636363615</statistic>
                <statistic aggregation='Avg' datatype='real'>22.224242424242409</statistic>
                <statistic aggregation='Min' datatype='real'>0.010101010101010102</statistic>
                <statistic aggregation='Max' datatype='real'>99.999999999999915</statistic>
                <statistic aggregation='Stdev' datatype='real'>40.438916080884759</statistic>
                <statistic aggregation='StdevP' datatype='real'>39.067704542375964</statistic>
                <statistic aggregation='Var' datatype='real'>1635.3059337968398</statistic>
                <statistic aggregation='VarP' datatype='real'>1526.2855382103837</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>30303.037343128199</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prob cenário C não acontecer</remote-name>
              <remote-type>5</remote-type>
              <local-name>[prob cenário C não acontecer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>prob cenário C não acontecer</remote-alias>
              <ordinal>6</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7.472430243024303</statistic>
                <statistic aggregation='Avg' datatype='real'>0.49816201620162021</statistic>
                <statistic aggregation='Min' datatype='real'>0.0099009900990099098</statistic>
                <statistic aggregation='Max' datatype='real'>0.98999999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.41601052196975102</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.40190434694950533</statistic>
                <statistic aggregation='Var' datatype='real'>0.17306475438954469</statistic>
                <statistic aggregation='VarP' datatype='real'>0.16152710409690837</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6.1453874772445749</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prob cenário C</remote-name>
              <remote-type>5</remote-type>
              <local-name>[prob cenário C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>prob cenário C</remote-alias>
              <ordinal>7</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7.527569756975697</statistic>
                <statistic aggregation='Avg' datatype='real'>0.50183798379837985</statistic>
                <statistic aggregation='Min' datatype='real'>0.01</statistic>
                <statistic aggregation='Max' datatype='real'>0.99009900990099009</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.41601052196975091</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.40190434694950528</statistic>
                <statistic aggregation='Var' datatype='real'>0.17306475438954461</statistic>
                <statistic aggregation='VarP' datatype='real'>0.16152710409690829</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6.200526991195968</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prob relativa c alt</remote-name>
              <remote-type>5</remote-type>
              <local-name>[prob relativa c alt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>prob relativa c alt</remote-alias>
              <ordinal>8</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>13.419210351035103</statistic>
                <statistic aggregation='Avg' datatype='real'>0.8946140234023402</statistic>
                <statistic aggregation='Min' datatype='real'>0.79207920792079212</statistic>
                <statistic aggregation='Max' datatype='real'>0.99790000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.087362209613648087</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.084399912859396492</statistic>
                <statistic aggregation='Var' datatype='real'>0.0076321556685789863</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0071233452906737209</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>12.111863942381948</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prob relativa c</remote-name>
              <remote-type>5</remote-type>
              <local-name>[prob relativa c]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>prob relativa c</remote-alias>
              <ordinal>9</ordinal>
              <family>Resultado_TradeOffCenárioX</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.5807896489648963</statistic>
                <statistic aggregation='Avg' datatype='real'>0.10538597659765975</statistic>
                <statistic aggregation='Min' datatype='real'>0.0020999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>0.20792079207920791</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.087362209613647698</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.084399912859396117</statistic>
                <statistic aggregation='Var' datatype='real'>0.0076321556685789186</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0071233452906736576</statistic>
                <statistic aggregation='Count' datatype='integer'>15</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.27344324031174222</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.267139' measure-ordering='alphabetic' measure-percentage='0.562648' parameter-percentage='0.170213' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Resultado_Geral' inline='true' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Exemplo-Didatico-RDM' name='excel-direct.10w24z802q3pex1288wa60d75a0r'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\Google Drive\Pedro\Estudos\MS Eng. Produção\Dissertação\Exemplo-Didatico-RDM.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.10w24z802q3pex1288wa60d75a0r' name='Resultados_Geral' table='[Resultados_Geral$]' type='table'>
          <columns gridOrigin='A1:O301:no:A1:O301:0' header='yes' outcome='6'>
            <column datatype='integer' name='Futuro' ordinal='0' />
            <column datatype='integer' name='Custo' ordinal='1' />
            <column datatype='integer' name='Preço' ordinal='2' />
            <column datatype='integer' name='Demanda' ordinal='3' />
            <column datatype='string' name='Estratégia' ordinal='4' />
            <column datatype='integer' name='Produção' ordinal='5' />
            <column datatype='integer' name='Faturamento' ordinal='6' />
            <column datatype='integer' name='Custo Variável' ordinal='7' />
            <column datatype='real' name='Lucro' ordinal='8' />
            <column datatype='real' name='Arrependimento' ordinal='9' />
            <column datatype='integer' name='Perf. Inaceitável?' ordinal='10' />
            <column datatype='real' name='Arrepend. Percentual' ordinal='11' />
            <column datatype='integer' name='CA' ordinal='12' />
            <column datatype='integer' name='CB' ordinal='13' />
            <column datatype='integer' name='CC' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Futuro</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Futuro]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Futuro</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Custo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Custo]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Custo</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Preço</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Preço]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Preço</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Demanda</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Demanda]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Demanda</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estratégia</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Estratégia]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Estratégia</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Produção</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Produção]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Produção</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faturamento</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Faturamento]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Faturamento</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Custo Variável</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Custo Variável]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Custo Variável</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lucro</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lucro]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Lucro</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrependimento</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arrependimento]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Arrependimento</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perf. Inaceitável?</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Perf. Inaceitável?]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Perf. Inaceitável?</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrepend. Percentual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arrepend. Percentual]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>Arrepend. Percentual</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CA]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>CA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CB]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>CB</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CC]</local-name>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias>CC</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Resultados_Geral]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O301:no:A1:O301:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Arrependimento (compartimento)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Arrependimento]' peg='0' size='285' />
      </column>
      <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
      <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
      </column>
      <column caption='Houve Lucro?' datatype='string' name='[Calculation_308778084363878400]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Lucro]&gt;=0 THEN &quot;Houve Lucro&quot; ELSE &quot;Houve Prejuízo&quot; END' />
      </column>
      <column aggregation='None' caption='Custo (compartimento)' datatype='integer' name='[Custo (compartimento)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[Custo]' peg='0' size='2.5' />
      </column>
      <column datatype='integer' name='[Custo]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Demanda (compartimento)' datatype='integer' name='[Demanda (compartimento)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Demanda]' peg='0' size='50' />
      </column>
      <column datatype='integer' name='[Demanda]' role='measure' type='quantitative' />
      <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Lucro (bin)' datatype='integer' name='[Lucro (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Lucro]' peg='0' size='620' />
      </column>
      <column datatype='real' name='[Lucro]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Preço (compartimento)' datatype='integer' name='[Preço (compartimento)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[Preço]' peg='0' size='2.5' />
      </column>
      <column datatype='integer' name='[Preço]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_308778084363878400]' derivation='None' name='[none:Calculation_308778084363878400:nk]' pivot='key' type='nominal' />
      <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:\Google Drive\Pedro\Estudos\MS Eng. Produção\Dissertação\Imagens Exemplo Didático\Resultado_Geral.tde' schema='Extract' tablename='Extract' update-time='01/27/2017 01:56:38 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Arrependimento (compartimento)]' formula='SYS_NUMBIN([Arrependimento],285)' />
            <calculation column='[Calculation_308778084363878400]' formula='IF [Lucro]&gt;=0 THEN &quot;Houve Lucro&quot; ELSE &quot;Houve Prejuízo&quot; END' />
            <calculation column='[Custo (compartimento)]' formula='SYS_NUMBIN([Custo],2.5)' />
            <calculation column='[Demanda (compartimento)]' formula='SYS_NUMBIN([Demanda],50)' />
            <calculation column='[Lucro (bin)]' formula='SYS_NUMBIN([Lucro],620)' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Preço (compartimento)]' formula='SYS_NUMBIN([Preço],2.5)' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='300' timestamp-start='2017-01-27 13:56:38.619' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Arrepend. Percentual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Arrepend. Percentual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arrepend. Percentual</remote-alias>
              <ordinal>0</ordinal>
              <family>Resultados_Geral</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>175</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>411.67743148807682</statistic>
                <statistic aggregation='Avg' datatype='real'>1.372258104960256</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>19.50975487743872</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.0278805461757368</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.0228298661855111</statistic>
                <statistic aggregation='Var' datatype='real'>9.1680606019094792</statistic>
                <statistic aggregation='VarP' datatype='real'>9.1375003999031144</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3306.1778119596679</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arrependimento</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Arrependimento]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arrependimento</remote-alias>
              <ordinal>1</ordinal>
              <family>Resultados_Geral</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>166</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>319523.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1065.0766666666666</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>5322.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1263.6646675822963</statistic>
                <statistic aggregation='StdevP' datatype='real'>1261.5568017819182</statistic>
                <statistic aggregation='Var' datatype='real'>1596848.3920958752</statistic>
                <statistic aggregation='VarP' datatype='real'>1591525.5641222221</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>817774161.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CA</remote-name>
              <remote-type>16</remote-type>
              <local-name>[CA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CA</remote-alias>
              <ordinal>2</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>80.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.26666666666666666</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.44295551414779266</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.44221663871405331</statistic>
                <statistic aggregation='Var' datatype='real'>0.19620958751393533</statistic>
                <statistic aggregation='VarP' datatype='real'>0.19555555555555557</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>80.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CB</remote-name>
              <remote-type>16</remote-type>
              <local-name>[CB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CB</remote-alias>
              <ordinal>3</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>39.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.13</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.33686534530812934</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.33630343441600474</statistic>
                <statistic aggregation='Var' datatype='real'>0.11347826086956522</statistic>
                <statistic aggregation='VarP' datatype='real'>0.11310000000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>39.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CC</remote-name>
              <remote-type>16</remote-type>
              <local-name>[CC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CC</remote-alias>
              <ordinal>4</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>63.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.20999999999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.4079887859958013</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.40730823708832603</statistic>
                <statistic aggregation='Var' datatype='real'>0.16645484949832776</statistic>
                <statistic aggregation='VarP' datatype='real'>0.16589999999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>63.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Custo Variável</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Custo Variável]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Custo Variável</remote-alias>
              <ordinal>5</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2256300.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7521.0</statistic>
                <statistic aggregation='Min' datatype='integer'>4000</statistic>
                <statistic aggregation='Max' datatype='integer'>12000</statistic>
                <statistic aggregation='Stdev' datatype='real'>2279.4249846988969</statistic>
                <statistic aggregation='StdevP' datatype='real'>2275.6227719022327</statistic>
                <statistic aggregation='Var' datatype='real'>5195778.2608695654</statistic>
                <statistic aggregation='VarP' datatype='real'>5178459.0</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18523170000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Custo</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Custo]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Custo</remote-alias>
              <ordinal>6</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7521.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.07</statistic>
                <statistic aggregation='Min' datatype='integer'>20</statistic>
                <statistic aggregation='Max' datatype='integer'>30</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.2030138399424497</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1976710274823454</statistic>
                <statistic aggregation='Var' datatype='real'>10.259297658862875</statistic>
                <statistic aggregation='VarP' datatype='real'>10.225099999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>191619.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Demanda</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Demanda]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Demanda</remote-alias>
              <ordinal>7</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>90867.0</statistic>
                <statistic aggregation='Avg' datatype='real'>302.88999999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>200</statistic>
                <statistic aggregation='Max' datatype='integer'>396</statistic>
                <statistic aggregation='Stdev' datatype='real'>56.675434858393103</statistic>
                <statistic aggregation='StdevP' datatype='real'>56.580896952946937</statistic>
                <statistic aggregation='Var' datatype='real'>3212.1049163879597</statistic>
                <statistic aggregation='VarP' datatype='real'>3201.3978999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28483125.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estratégia</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Estratégia]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estratégia</remote-alias>
              <ordinal>8</ordinal>
              <family>Resultados_Geral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;C&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;B&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Faturamento</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Faturamento]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Faturamento</remote-alias>
              <ordinal>9</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>116</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2726098.0</statistic>
                <statistic aggregation='Avg' datatype='real'>9086.9933333333338</statistic>
                <statistic aggregation='Min' datatype='integer'>6000</statistic>
                <statistic aggregation='Max' datatype='integer'>15444</statistic>
                <statistic aggregation='Stdev' datatype='real'>2140.1842979955827</statistic>
                <statistic aggregation='StdevP' datatype='real'>2136.6143467229231</statistic>
                <statistic aggregation='Var' datatype='real'>4580388.8293868452</statistic>
                <statistic aggregation='VarP' datatype='real'>4565120.8666222226</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26141570612.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Futuro</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Futuro]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Futuro</remote-alias>
              <ordinal>10</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15150.0</statistic>
                <statistic aggregation='Avg' datatype='real'>50.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>100</statistic>
                <statistic aggregation='Stdev' datatype='real'>28.914300774835606</statistic>
                <statistic aggregation='StdevP' datatype='real'>28.866070047722118</statistic>
                <statistic aggregation='Var' datatype='real'>836.03678929765886</statistic>
                <statistic aggregation='VarP' datatype='real'>833.25</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1015050.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lucro</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lucro]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lucro</remote-alias>
              <ordinal>11</ordinal>
              <family>Resultados_Geral</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>175</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>229767.99999999884</statistic>
                <statistic aggregation='Avg' datatype='real'>765.89333333332945</statistic>
                <statistic aggregation='Min' datatype='real'>-4800.1000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>5892.8999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>1929.4374004433657</statistic>
                <statistic aggregation='StdevP' datatype='real'>1926.2189871928429</statistic>
                <statistic aggregation='Var' datatype='real'>3722728.682229653</statistic>
                <statistic aggregation='VarP' datatype='real'>3710319.5866222209</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1289073655.3999977</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>300.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>300.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Perf. Inaceitável?</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Perf. Inaceitável?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Perf. Inaceitável?</remote-alias>
              <ordinal>13</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>117.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.39000000000000001</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.48856489044334023</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.48774993593028793</statistic>
                <statistic aggregation='Var' datatype='real'>0.23869565217391303</statistic>
                <statistic aggregation='VarP' datatype='real'>0.2379</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>117.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Preço</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Preço]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Preço</remote-alias>
              <ordinal>14</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10506.0</statistic>
                <statistic aggregation='Avg' datatype='real'>35.020000000000003</statistic>
                <statistic aggregation='Min' datatype='integer'>30</statistic>
                <statistic aggregation='Max' datatype='integer'>40</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.3251247870566192</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.3195782864695329</statistic>
                <statistic aggregation='Var' datatype='real'>11.056454849498328</statistic>
                <statistic aggregation='VarP' datatype='real'>11.019600000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>371226.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Produção</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Produção]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Produção</remote-alias>
              <ordinal>15</ordinal>
              <family>Resultados_Geral</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>90000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>300.0</statistic>
                <statistic aggregation='Min' datatype='integer'>200</statistic>
                <statistic aggregation='Max' datatype='integer'>400</statistic>
                <statistic aggregation='Stdev' datatype='real'>81.786082010953066</statistic>
                <statistic aggregation='StdevP' datatype='real'>81.649658092772611</statistic>
                <statistic aggregation='Var' datatype='real'>6688.9632107023408</statistic>
                <statistic aggregation='VarP' datatype='real'>6666.666666666667</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='Median' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29000000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arrependimento (compartimento)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Arrependimento (compartimento)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arrependimento (compartimento)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1024.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.4133333333333336</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>18</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.3233621666053299</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.3161505482959646</statistic>
                <statistic aggregation='Var' datatype='real'>18.691460423634336</statistic>
                <statistic aggregation='VarP' datatype='real'>18.629155555555556</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9084.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_308778084363878400</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_308778084363878400]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_308778084363878400</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>14</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Houve Lucro&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Houve Prejuízo&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Houve Lucro&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>56</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Custo (compartimento)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Custo (compartimento)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Custo (compartimento)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2901.0</statistic>
                <statistic aggregation='Avg' datatype='real'>9.6699999999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>8</statistic>
                <statistic aggregation='Max' datatype='integer'>12</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.3140990020888723</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.3119070088996401</statistic>
                <statistic aggregation='Var' datatype='real'>1.7268561872909698</statistic>
                <statistic aggregation='VarP' datatype='real'>1.7211000000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28569.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Demanda (compartimento)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Demanda (compartimento)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Demanda (compartimento)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1677.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5.5899999999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>4</statistic>
                <statistic aggregation='Max' datatype='integer'>7</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.0889687060744053</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.0871522432483869</statistic>
                <statistic aggregation='Var' datatype='real'>1.1858528428093646</statistic>
                <statistic aggregation='VarP' datatype='real'>1.1819</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9729.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lucro (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Lucro (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lucro (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>215.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.71666666666666667</statistic>
                <statistic aggregation='Min' datatype='integer'>-8</statistic>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.1126651769668214</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1074730713055083</statistic>
                <statistic aggregation='Var' datatype='real'>9.6886845039018947</statistic>
                <statistic aggregation='VarP' datatype='real'>9.6563888888888894</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3051.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Preço (compartimento)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Preço (compartimento)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Preço (compartimento)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4089.0</statistic>
                <statistic aggregation='Avg' datatype='real'>13.630000000000001</statistic>
                <statistic aggregation='Min' datatype='integer'>12</statistic>
                <statistic aggregation='Max' datatype='integer'>16</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.3926827411120253</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.3903596656980524</statistic>
                <statistic aggregation='Var' datatype='real'>1.9395652173913043</statistic>
                <statistic aggregation='VarP' datatype='real'>1.9331</statistic>
                <statistic aggregation='Count' datatype='integer'>300</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>56313.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.446809' measure-ordering='alphabetic' measure-percentage='0.498818' parameter-percentage='0.0543735' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Calculation_191684493075349504:nk]' palette=':filled' type='shape'>
            <map to=':filled/times'>
              <bucket>true</bucket>
            </map>
            <map to='circle'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_308778084363878400:nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;Houve Lucro&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Houve Prejuízo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_191684493075349504:nk]' type='palette'>
            <map to='#309143'>
              <bucket>false</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Estratégia:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
          <calculation class='tableau' formula='964.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Arrependimento em Todas as Estratégias'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
          </datasources>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column aggregation='None' datatype='integer' name='[Arrependimento (compartimento)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='2' formula='[Arrependimento]' peg='0' size='285' />
            </column>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Arrependimento (compartimento)]' derivation='None' name='[none:Arrependimento (compartimento):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
              <lod column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento (compartimento):qk]</cols>
        <show-full-range>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Arrependimento (compartimento)]</column>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Lucro (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Arrependimento em Todas as Estratégias 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
          </datasources>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column aggregation='None' datatype='integer' name='[Arrependimento (compartimento)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='2' formula='[Arrependimento]' peg='0' size='285' />
            </column>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Arrependimento (compartimento)]' derivation='None' name='[none:Arrependimento (compartimento):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
              <lod column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk] * [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk])</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento (compartimento):qk]</cols>
        <show-full-range>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Arrependimento (compartimento)]</column>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Lucro (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Arrependimento por estratégia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column-instance column='[Arrependimento]' derivation='None' name='[none:Arrependimento:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' value='112' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <lod column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='692' />
                <format attr='maxwidth' value='692' />
                <format attr='minheight' value='282' />
                <format attr='maxheight' value='282' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Caracterizando o Arrependimento por Estratégia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column-instance column='[Arrependimento]' derivation='None' name='[none:Arrependimento:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Arrependimento:qk]</rows>
        <cols>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk] / [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Cluster Baixa Demanda'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='integer' name='[Custo]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Demanda]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Preço]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Arrependimento]' derivation='Sum' name='[sum:Arrependimento:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Custo]' derivation='Sum' name='[sum:Custo:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demanda]' derivation='Sum' name='[sum:Demanda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Preço]' derivation='Sum' name='[sum:Preço:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]'>
            <groupfilter function='member' level='[none:Estratégia:nk]' member='&quot;B&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' enable-instant-analytics='true' formula='constant' id='refline6' label-type='automatic' paired-id='refline7' scope='per-table' symmetric='false' value='200' value-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' z-order='1' />
            <reference-line axis-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' enable-instant-analytics='true' formula='constant' id='refline7' label-type='automatic' paired-id='refline6' scope='per-table' symmetric='false' value='250' value-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' z-order='2' />
          </pane>
          <pane id='7' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='8' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='9' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Arrependimento:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]</rows>
        <cols>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Arrependimento:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Como as Estratégias Reagem aos seus Inputs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='integer' name='[Custo]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Demanda]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='real' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Preço]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Custo]' derivation='Sum' name='[sum:Custo:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demanda]' derivation='Sum' name='[sum:Demanda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lucro]' derivation='Sum' name='[sum:Lucro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Preço]' derivation='Sum' name='[sum:Preço:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Lucro:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Lucro:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Lucro:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='true' />
            <format attr='width' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Lucro:qk]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='194' />
                <format attr='maxwidth' value='194' />
                <format attr='minheight' value='131' />
                <format attr='maxheight' value='131' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.62569057941436768' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.62569057941436768' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.62569057941436768' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk] * [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Lucro:qk])</rows>
        <cols>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Estratégia com maior número de casos de Lucro'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
          </datasources>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column caption='Houve Lucro?' datatype='string' name='[Calculation_308778084363878400]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Lucro]&gt;=0 THEN &quot;Houve Lucro&quot; ELSE &quot;Houve Prejuízo&quot; END' />
            </column>
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='real' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_308778084363878400]' derivation='None' name='[none:Calculation_308778084363878400:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='natural' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' value='113' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_308778084363878400:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Estratégias e Arrependimento'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='integer' name='[Custo]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Demanda]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Preço]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Arrependimento]' derivation='Sum' name='[sum:Arrependimento:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Custo]' derivation='Sum' name='[sum:Custo:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demanda]' derivation='Sum' name='[sum:Demanda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Preço]' derivation='Sum' name='[sum:Preço:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Arrependimento:qk]</rows>
        <cols>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Estratégias e Percentis de Arrependimento'>
      <table>
        <view>
          <datasources>
            <datasource caption='Percentis' name='federated.0rz130h1jij93l1grq23h11egigb' />
          </datasources>
          <datasource-dependencies datasource='federated.0rz130h1jij93l1grq23h11egigb'>
            <column datatype='real' name='[% Casos Inaceitáveis]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='real' name='[Média Geral]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percentil 100% Geral]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percentil 25% Geral]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percentil 50% Geral]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percentil 75% Geral]' role='measure' type='quantitative' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Casos Inaceitáveis]' derivation='Sum' name='[sum:% Casos Inaceitáveis:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Média Geral]' derivation='Sum' name='[sum:Média Geral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentil 100% Geral]' derivation='Sum' name='[sum:Percentil 100% Geral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentil 25% Geral]' derivation='Sum' name='[sum:Percentil 25% Geral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentil 50% Geral]' derivation='Sum' name='[sum:Percentil 50% Geral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentil 75% Geral]' derivation='Sum' name='[sum:Percentil 75% Geral:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rz130h1jij93l1grq23h11egigb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Média Geral:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 100\% Geral:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 25\% Geral:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 50\% Geral:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 75\% Geral:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:\% Casos Inaceitáveis:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0rz130h1jij93l1grq23h11egigb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Média Geral:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 100\% Geral:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 25\% Geral:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 50\% Geral:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 75\% Geral:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rz130h1jij93l1grq23h11egigb].[sum:\% Casos Inaceitáveis:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.0rz130h1jij93l1grq23h11egigb].[none:Estratégia:nk]' direction='DESC' using='[federated.0rz130h1jij93l1grq23h11egigb].[sum:Percentil 75% Geral:qk]' />
          <slices>
            <column>[federated.0rz130h1jij93l1grq23h11egigb].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rz130h1jij93l1grq23h11egigb].[:Measure Names]' value='105' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0rz130h1jij93l1grq23h11egigb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rz130h1jij93l1grq23h11egigb].[none:Estratégia:nk]</rows>
        <cols>[federated.0rz130h1jij93l1grq23h11egigb].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Exemplo Arrependimento'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
          </datasources>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column caption='[Measure Names]' datatype='real' name='[Calculation_308778084366422019]' role='measure' type='quantitative' user:unnamed='Exemplo Arrependimento'>
              <calculation class='tableau' formula='[Measure Names]' />
            </column>
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Futuro]' role='measure' type='quantitative' />
            <column-instance column='[Futuro]' derivation='Attribute' name='[attr:Futuro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_308778084366422019]' derivation='None' name='[none:Calculation_308778084366422019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[attr:Futuro:qk]' included-values='in-range'>
            <min>5</min>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[attr:Futuro:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_308778084366422019:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Landscape-Cenários'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
          </datasources>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Custo (compartimento)' datatype='integer' name='[Custo (compartimento)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[Custo]' peg='0' size='2.5' />
            </column>
            <column datatype='integer' name='[Custo]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Demanda (compartimento)' datatype='integer' name='[Demanda (compartimento)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Demanda]' peg='0' size='50' />
            </column>
            <column datatype='integer' name='[Demanda]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='real' name='[Lucro]' role='measure' type='quantitative' />
            <column-instance column='[Arrependimento]' derivation='Avg' name='[avg:Arrependimento:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lucro]' derivation='Avg' name='[avg:Lucro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Custo (compartimento)]' derivation='None' name='[none:Custo (compartimento):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Demanda (compartimento)]' derivation='None' name='[none:Demanda (compartimento):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Demanda (compartimento):ok]'>
            <groupfilter from='4' function='range' level='[none:Demanda (compartimento):ok]' to='7' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]'>
            <groupfilter from='&quot;A&quot;' function='range' level='[none:Estratégia:nk]' to='&quot;C&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Demanda (compartimento):ok]</column>
            <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Demanda (compartimento):ok]' value='78' />
            <format attr='height' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Custo (compartimento):ok]' value='44' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Arrependimento:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Arrependimento:qk]' num-steps='8' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Lucro:qk]' num-steps='4' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Arrependimento:qk]' />
              <text column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Arrependimento:qk]' />
              <text column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Lucro:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Custo (compartimento):ok]</rows>
        <cols>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk] / [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Demanda (compartimento):ok])</cols>
        <show-full-range>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Preço (compartimento)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Lucro em Todas as Estratégias'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
          </datasources>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Lucro (bin)' datatype='integer' name='[Lucro (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='2' formula='[Lucro]' peg='0' size='620' />
            </column>
            <column datatype='real' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lucro (bin)]' derivation='None' name='[none:Lucro (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Lucro (bin):ok]' value='105' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Lucro (bin):ok]' value='32' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
              <lod column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Lucro (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Arrependimento (compartimento)]</column>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Lucro (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Lucro em Todas as Estratégias 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
          </datasources>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Lucro (bin)' datatype='integer' name='[Lucro (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='2' formula='[Lucro]' peg='0' size='620' />
            </column>
            <column datatype='real' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lucro (bin)]' derivation='None' name='[none:Lucro (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Lucro (bin):ok]' value='31' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
              <lod column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk] * [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk])</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Lucro (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Arrependimento (compartimento)]</column>
          <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[Lucro (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Lucro por Estratégia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='real' name='[Lucro]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lucro]' derivation='None' name='[none:Lucro:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' value='111' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <lod column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Lucro:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Lucro:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Lucro:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Número de Casos Com Performance Inaceitável'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='real' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Lucro]' derivation='Avg' name='[avg:Lucro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]'>
            <groupfilter function='member' level='[none:Calculation_191684493075349504:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' direction='DESC' using='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]' scope='cols' value='Número de Casos com Performance Inaceitável' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' value='93' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Lucro:qk]' num-steps='4' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Lucro:qk]' />
              <lod column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='558' />
                <format attr='maxwidth' value='558' />
                <format attr='minheight' value='60' />
                <format attr='maxheight' value='60' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</rows>
        <cols>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tradeoff das Estratégias no Cenário de Baixa Demanda'>
      <table>
        <view>
          <datasources>
            <datasource caption='TradeOffs' name='federated.0t38qfi1kae88c18lgad40vd782h' />
          </datasources>
          <datasource-dependencies datasource='federated.0t38qfi1kae88c18lgad40vd782h'>
            <column datatype='real' name='[Arrependimento Esperado]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column-instance column='[odds Cenario X]' derivation='Attribute' name='[attr:odds Cenario X:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Arrependimento Esperado]' derivation='None' name='[none:Arrependimento Esperado:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='real' name='[odds Cenario X]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0t38qfi1kae88c18lgad40vd782h].[attr:odds Cenario X:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0t38qfi1kae88c18lgad40vd782h].[attr:odds Cenario X:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0t38qfi1kae88c18lgad40vd782h].[attr:odds Cenario X:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.0t38qfi1kae88c18lgad40vd782h].[attr:odds Cenario X:qk]' scope='cols' value='Chance do Cenário De Baixa Demanda (&lt;=250) acontecer' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0t38qfi1kae88c18lgad40vd782h].[none:Estratégia:nk]' />
              <lod column='[federated.0t38qfi1kae88c18lgad40vd782h].[none:Estratégia:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='349' />
                <format attr='maxheight' value='349' />
                <format attr='minwidth' value='647' />
                <format attr='maxwidth' value='647' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t38qfi1kae88c18lgad40vd782h].[none:Arrependimento Esperado:qk]</rows>
        <cols>[federated.0t38qfi1kae88c18lgad40vd782h].[attr:odds Cenario X:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Arrependimento Esperado: </run>
              <run bold='true'>&lt;[federated.0t38qfi1kae88c18lgad40vd782h].[none:Arrependimento Esperado:qk]&gt;</run>
              <run fontcolor='#787878'>&#10;Estratégia: </run>
              <run bold='true'>&lt;[federated.0t38qfi1kae88c18lgad40vd782h].[none:Estratégia:nk]&gt;</run>
              <run fontcolor='#787878'>&#10;odds Cenario X: </run>
              <run bold='true'>&lt;[federated.0t38qfi1kae88c18lgad40vd782h].[attr:odds Cenario X:qk]&gt;&#10;Havendo chance de cenário de baixa demanda de 1:1, a estratégia &quot;A&quot; é a preferida.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0t38qfi1kae88c18lgad40vd782h].[attr:odds Cenario X:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0t38qfi1kae88c18lgad40vd782h].[none:Arrependimento Esperado:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0t38qfi1kae88c18lgad40vd782h].[none:Arrependimento Esperado:qk]</field>
                      <field>[federated.0t38qfi1kae88c18lgad40vd782h].[none:Estratégia:nk]</field>
                      <field>[federated.0t38qfi1kae88c18lgad40vd782h].[attr:odds Cenario X:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>458.72560975609758</value>
                    <value>&quot;A&quot;</value>
                    <value>1.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='204' y='-187' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Vulnerabilidade Estratégia A'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='integer' name='[Custo]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Demanda]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Preço]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Custo]' derivation='Sum' name='[sum:Custo:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demanda]' derivation='Sum' name='[sum:Demanda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Preço]' derivation='Sum' name='[sum:Preço:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]'>
            <groupfilter function='member' level='[none:Estratégia:nk]' member='&quot;A&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='138' />
                <format attr='maxwidth' value='138' />
                <format attr='minheight' value='138' />
                <format attr='maxheight' value='138' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]))</rows>
        <cols>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Vulnerabilidade Estratégia B'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='integer' name='[Custo]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Demanda]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Preço]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Custo]' derivation='Sum' name='[sum:Custo:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demanda]' derivation='Sum' name='[sum:Demanda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Preço]' derivation='Sum' name='[sum:Preço:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]'>
            <groupfilter function='member' level='[none:Estratégia:nk]' member='&quot;B&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]))</rows>
        <cols>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Vulnerabilidade Estratégia C'>
      <table>
        <view>
          <datasources>
            <datasource caption='Resultado_Geral' name='federated.0u7b22z0lt29151cuz2nq1k8s8ja' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold Arrependimento' datatype='real' name='[Parâmetro 1]' param-domain-type='any' role='measure' type='quantitative' value='964.0'>
              <calculation class='tableau' formula='964.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0u7b22z0lt29151cuz2nq1k8s8ja'>
            <column datatype='real' name='[Arrependimento]' role='measure' type='quantitative' />
            <column caption='Perf. Inaceitável2?' datatype='boolean' name='[Calculation_191684493075349504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Arrependimento]&gt;[Parameters].[Parâmetro 1]' />
            </column>
            <column datatype='integer' name='[Custo]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Demanda]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estratégia]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Preço]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_191684493075349504]' derivation='None' name='[none:Calculation_191684493075349504:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estratégia]' derivation='None' name='[none:Estratégia:nk]' pivot='key' type='nominal' />
            <column-instance column='[Custo]' derivation='Sum' name='[sum:Custo:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Demanda]' derivation='Sum' name='[sum:Demanda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Preço]' derivation='Sum' name='[sum:Preço:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]'>
            <groupfilter function='member' level='[none:Estratégia:nk]' member='&quot;C&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
              <shape column='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]))</rows>
        <cols>([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Demanda:qk] + ([federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Preço:qk] + [federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Custo:qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Análise RDM' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4668' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4668' />
            <zone h='83610' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15975'>
              <flipboard active-id='1' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Uma Análise RDM' captured-sheet='Estratégias e Percentis de Arrependimento' id='1' />
                  <story-point caption='Estratégias e Arrependimento' captured-sheet='Estratégias e Arrependimento' id='3' />
                  <story-point caption='Vulnerabilidade da Estratégia A' captured-sheet='Vulnerabilidade Estratégia A' id='4' />
                  <story-point caption='Vulnerabilidade da Estratégia B' captured-sheet='Vulnerabilidade Estratégia B' id='5' />
                  <story-point caption='Vulnerabilidade da Estratégia C' captured-sheet='Vulnerabilidade Estratégia C' id='6' />
                  <story-point caption='Cenário de Baixa Demanda (&lt;250) é crítico para Estratégia B' captured-sheet='Cluster Baixa Demanda' id='7' />
                  <story-point caption='Estratégia &quot;A&quot; é a única blindagem presente.' captured-sheet='Tradeoff das Estratégias no Cenário de Baixa Demanda' id='8' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Estratégias e Percentis de Arrependimento'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Estratégias e Arrependimento'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='shape' />
            <card mode='type_in' param='[Parameters].[Parâmetro 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Arrependimento em Todas as Estratégias'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='2' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Arrependimento em Todas as Estratégias 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='2' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Lucro em Todas as Estratégias'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Lucro em Todas as Estratégias 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Landscape-Cenários'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Arrependimento:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Arrependimento:qk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_668503103904595969:qk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Custo (compartimento):ok]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Demanda (compartimento):ok]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Preço (compartimento):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Vulnerabilidade Estratégia A'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='type_in' param='[Parameters].[Parâmetro 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Vulnerabilidade Estratégia B'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='type_in' param='[Parameters].[Parâmetro 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Vulnerabilidade Estratégia C'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='type_in' param='[Parameters].[Parâmetro 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Cluster Baixa Demanda'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='type_in' param='[Parameters].[Parâmetro 1]' type='parameter' />
            <card pane-specification-id='7' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='color' />
            <card pane-specification-id='7' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rz130h1jij93l1grq23h11egigb].[none:Calculation_191684493080211458:qk]</field>
            <field>[federated.0rz130h1jij93l1grq23h11egigb].[none:Estratégia:nk]</field>
            <field>[federated.0rz130h1jij93l1grq23h11egigb].[none:Percentil 75% Geral:qk]</field>
            <field>[federated.0rz130h1jij93l1grq23h11egigb].[usr:Calculation_191684493080137729:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[attr:Calculation_191684493075349504:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tradeoff das Estratégias no Cenário de Baixa Demanda'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0t38qfi1kae88c18lgad40vd782h].[none:Estratégia:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Análise RDM'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='Número de Casos Com Performance Inaceitável'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parâmetro 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Lucro:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[avg:Lucro:qk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Exemplo Arrependimento'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Caracterizando o Arrependimento por Estratégia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Arrependimento:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Estratégia com maior número de casos de Lucro'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_308778084363878400:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_308778084363878400:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Lucro por Estratégia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Arrependimento:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Arrependimento por estratégia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[sum:Arrependimento:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Como as Estratégias Reagem aos seus Inputs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rz130h1jij93l1grq23h11egigb].[none:Estratégia:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Calculation_191684493075349504:nk]</field>
            <field>[federated.0u7b22z0lt29151cuz2nq1k8s8ja].[none:Estratégia:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Análise RDM' width='192'>
      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
      awO3/fI3NnoEbaN0/eE4liDUsdH1f7jPbtBGpcC1mQUOHHzsodsNWilk0Bpt4vE4gUCQXKHC
      4cMHuvLezmo5z0q6zPjYEPn1VarYqeWT23ok+MsWo7MMjI1j3eZjMJnkMgZniKC3y6tbrRoX
      r95gaGSERDzO3seOUsqtEw5v88cddXRmozF2j+/c1K/d8+8mG7vOUiLJ7FK2K3Prng7xqXOs
      6x4iAQ/9I2N4XNauvbG51TZSLd3aYLtw6RKgb/uR4Ds0smgtG3Nz0e0dB1jLlVhdnu/+gs12
      Jnb0U1mLk2o6aBSTXLm+/R/AGIvO4TLWWO7GRjCAwWSkWn64tgdaWpZ0qUEul0VrGrA085js
      /q4tPzZzjWLDQKlcIuD3sbgwu+1Hgu9gspJansdq/+pz57dKK2Ro6NtzTYTEeomB0V34a3Eu
      zaxSzq3R2OYdaA67lWhsdesbwUKo5K6N4G6fDu31ducglRDbQV4BhNLkwlhCaRKAUJoEIJQm
      AQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKA
      UJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQil
      SQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoE
      IJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBC
      aRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQm
      AQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKA
      UJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQil
      SQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoE
      IJQmAQilSQBCaRKAUJoEIJQmAQil/T+g4pb3W5ydxgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Arrependimento em Todas as Estratégias' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAXbUlEQVR4nO3daWwcd5rf8W9VX2Q32SSbFO/7EklJliXZ0vi2x/buZo2Jdze72HmRfZHs
      m7xJXgQBssAGwSzyJpsDQYDsy0GwQQYZ2JOZRYCNZ3zKK3nGkmXJokhREu+refTBJvvuriMv
      NJIn4FKkqpvFo57PG1tS/+v5F9m/7jqfUkzTNBHCodSDnoAQB0kCIBxt3wOgadp+lwDANE3b
      aum6jmEYttSya52Oa63d6ux7AOzcxbDrTXkc1+m41tqtjmwCCUeTAAhHkwAIR5MACEezFAC9
      mGdlLQJAIZ3gweQ0qVyRXDLO1OwiuiHn1sTRYCkAieg6swtLAEQiUQIVJpMzy9y9O4Erv869
      hc2yTlKI/eK2Mqi+pYPQZhqA1o4Oph9M09LSTMxM0zPUw53RMJpWhWmaxBIpZpYjlibn97kY
      7m1HUZQ9vV7XdQqFgqVaT8MwDBRF2fO8SmHXOh3XWrvVsRAAE9N8eCzcME1mJic50TlA0O9l
      aTLJ1voyRmUtbvfDRU+tbPIf37tpafJnOmv4i8FuXC7X7rP69bF5r9drqdbT0DQNVVVR1f3f
      hSoUCras03GttVsdS98A4Zm7RKNxsuNTVJl5Rm9ep76tn5N9HUzMJzj/bIPlCQthJwsBUGjr
      O0Vb37d/M/gb/3qxvq3kSQlhFzkMKhxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIg
      HE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHM1SW5TI
      4hS35+O89fLzzN29xdTKBn2nLlBYnWBhPcmpi6/RWusr91yFKDtLATjR0U97+h6gsVWs4M3X
      LnJ7Yh1VDfD2myPcHg/THOzCNM2SHyah6/qel2EYhi1PHnk0Jzse8mDXOh3XWrvVsRSAbynf
      vskVBdMwME0DlIdbVoqioFBa+8CnaUFoV7vCR3XsrGWH41hrtzqWWiMuT43zYHKWdNFNY0Dn
      s6s3OXnmOQprG3z6+S3OXHrl27aBJa6jqqp7bo2oKMqeXlsq0zRta42o67ot63Rca+1Wx1pn
      uP7TtPWffvw3HQO//p+GC/SeevolCnFQ5CiQcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJ
      gHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBw
      tJIDoGsFUqk0umE+/P90tuRmWELYpcTGWAZjN7+iiIKnthM2ZkgXNBr7L9LfUlWeGQqxj3YM
      gGmamIYBqoq6Y2ctBX+ll3AsTUurj0IhxIsXuxkdXUM7UfHrZZT2bVAsFtF1fU+v1XWdQqFQ
      Ur29MAzDts5mdq3Tca21W50dApDl2tXbRMLj+Hte582LfTsML5LIuHjh4mm+uRfDbebIJROY
      Pj9u98NFK2ppbxKPx7PnznAAXq+3pHp7oWmabZ3hCoWCLet0XGvtVmeH36DO6C8vk/fXkoxu
      PGHxHjqa/Fz7+j6tHS20nwhyYyxMX29jSZMWwi7bvgGKuS3ujj3g2ddfx9B1gi2dTxiu0Nw9
      RHP3oz8HaXzSy4U4ZLYFQFFdBKpMbvzdPC9eambifpiRHuuf6HUBL8/311ka2xbyW64rxF5s
      C4DbG6B/6FnGv77DnbFpgn2vlFSgtzjGv9j8V5bGZiq+A7xYUn0hnmSHneAiDR1nOHvhFAF/
      ZYklTBTkvIA4nHY8jDH/zef86P2f8uWdeTvnI4StdgiAn0uvv0RDTQ293c32zkgIG+0QgE1u
      3Iny1ot9XLkyZu+MhLDRDgEIEPKn+MUnX9PR12bvjISw0Q47wRpNPed47eQJHsxl7J2REDba
      IQA64zdvoGUbWcq2cnq4w95ZCWGTHTeB3vrtF1D8bbz+wkl7ZySEjXYIQJYP3n+f9cgalz+X
      nWBxfO14HkBxKYx/9RUESj0RJsThtX0fwDSIhNe49Lt/TLDSTSovd02K42tbANKxeT78/CYN
      VTnuziR5+/f/6CDmJYQttn2857NJijkDwwSPtxoPe7sbS4ijaNs3QLCpj1de8qEBvUNQE6g4
      gGkJYY9tAdAKOSprayikobtXrgMSx9u2AJhanssf/IQ7d7cYOdNF7zMv8dLZ3oOYmxD7blsA
      Kmta+ON//KecHX1ATnExMNh+EPMSwhbbj3EqCi63wdjte5i5VS5fnTiAaQlhjx0vhejrCXJ/
      OsrQ6R57ZySEjXa4GE7ludff4bk9LCCxMsvo5CK9I+cw47NMLSc4e+lFQv4Sm84JYYMd3qUZ
      PvvoFq989wVc6pM6oBlMLazx7PnzVFZUMr6o8coLQ4zPrFI3XJ77CEzT3FOv0UevsaMv6aM5
      2dUD1c5eq8ex1pPq7PgxHZ/9hr/+0Rynzr3Ed8507/AqAy2X4cG9MXR3CL/bg9tbCVoKwzDK
      8ibRdX3PyzAMA03TSqq31zqmaWIYhi217Fin41prtzo7BMCDy2vS19NNOpl/wuLdtDbXM7sa
      J9joQ02v8fEnv2Tw/KuP2xkWS+yf6Xa799wa0TRNPB5PSfX2ws7WiHat03GttVudHQKQYyup
      kZycJNAWeGKBzpNn6Xx8y0AXp6zNU4gDscNHWBVv/NYrVNY18sbL8pYWx9cOAUjz4S+uE3Ql
      uHztgb0zEsJG2zaBcslVfv63H7O8ESPQ4MZQsgcxLyFssS0AvqomvveH3+eNrQ0yeY3K6tqD
      mJcQtti2CaQoCi53hp/+z//N9evXmVmKHsS8hLDFDvsAlfj8Bi6XC5cNh/qEOCg7HAbNE6jr
      5fXXX8bt9dk7IyFstMPHu4tKknzwwQfcmVyxd0ZC2GjH7RuP1wuFFBuZop3zEcJWO2wC+bjw
      yqsUs2Gu3Nq0d0ZC2GjHJ8Q8uDPKVlHn2Qt7uShaiKNpWwAym0v87P2fkzEN0hvrLKYDdH/v
      0kHMTYh9t/2e4GArb779Knfu3kfrGebFl84fxLyEsMW2neCt9Qn+y3/4K0YnF1ieu883E/KM
      MHF8bfsGqGk6xV/+1X89iLkIYTs5zSscTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcreT+haap
      c/Xj/0v76VfJr4yzGE0y/PxrtNfJgzXE4VdyAGKLk1Q196AaBkV3FW+/eZrb4yu0BDsfvqDE
      znCaph26znCPutVJZ7jDX8tiZ7g90tJcu3UPRTWIJaHBb2DoRVBdqKr68I1bYme4p+nApiiK
      bd3aVFV9Qs/U8rFrnY5rrd3qlBYAd4B33v09NmMr5MxqspFJLl+9wzOXXkZRntRUd+/2GgDT
      NG37oRqGcWh+gVKrtDpl6WFeU99CDUDDObqHy7FEIewhR4GEo0kAhKNJAISjSQCEo0kAhKNJ
      AISjSQCEo0kAhKMd24f55nI5llZjlse3Ntbh9/vLOCNxGB3rAPzZD69S1K1djPfDf/m2BMAB
      ZBNIOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAONqhPw+Qz+f3fOucpmmPb1QvFuXZZmJ3hz4A
      //aHn1LQnr77wkBL9T7MRhw3hz4Ai7EMucLTB6CuyrsPsxHHjewDCEcrOQCJ1TmuXP2ClXiK
      2PI0V391g0xx/xtGCVEOJQfA8FRx6fwQa6tR5lfiXBhuZHJmvRxzE2LflbwPUO13cW9qlf7B
      fuYn01TW1KMsrDxuabjXtoaHja7rFAqFv/ffHjXGsqMz3JPmIbVKr1NiAAy+vnaDqhNtbCRS
      FNNxbn4Vo6rtHG73w0VrNrxJ9oOmaTv+4HRdf2JrRFVVy3YpdaFQwOu1Z4d+c3MTl8tlaayi
      KAQCgT2/3q712q1OiQFQOHXuArmCjq+yguZnnyOZKVBbW1XaYg+B9y5PcHs+YWnsu9/p4fe/
      e/Ser/x/rk7wye1lS2NfPdXMP333pTLPaP+VHIDqmhC/ecQ95KssbZGHRCavs5GydjItX9TL
      PBt75ArW1zlbOJrrvO/nAQpqO3H39y2N1VxtJdX+s9MzYFr7xXyUfb6k2uJo2PcAKLEkri/u
      WhprjJjAScu1B1bfRzWs7Wh9VPuc5bqlWF2PMrey8fjPhmHs+VKQCo+L04Odj/e/ntZIg0b1
      cNbS2NYT9jxXoNwO/Zlgp5lZjvOX79+0NLa3KcC/72uzHIC+zDWeif4PS2PToe8D37U09iDJ
      mWDhaBIA4WiHfhPonQHQLLQ2aQiZML0PE9qDbL7AnftzlsZubKXLOxnxRIc+AO/G/zOq9vRv
      irT3lX2Yzd6Eo2n+zZdfWhp7sT9U5tmIJzn0ARD2yXCatPknFkcfzWdjSQDEY2p4HfX6bUtj
      9aqj+c0lARBlYegascUHe369bui41IfXHemuCpJFa29Fj8dFZ2uTpbEgARDlUkihf/YXTzXk
      0Tn6tfqX+euZDktlT9QG+Nd/IgEQB8wsqmS+CFoa6z+f48/d/8nSWNXVDrxhaSxIAHb0neYc
      Q54tS2NrGvyMeK2NzfuruW5p5ENfjc2gm9YuQW8qFLF8EbdhoG5uWhuay+I2opbGKhWlXXYu
      AdjBydRlqiMfWxqb9L1leexU95/y8sCgpbGhYAX//cMJoklr1z/9eUPBegBKYLoqSDb/lqWx
      rqoGSrn4/lgHoFAzgGLxYriD0qTN888SP7Q0NqeMMBv6J/h91n6tblfc0rhSmRkd7WerlsYa
      jQaZNzI7/rumaWjazhfqHesApEY74Akr/yS+l4/mnWz/PPBj3GrE0tjN3Gtlns3+i25m+Hf/
      7UNLY0PV3sMfgM2630HRnv5TvBjowRX5AsVyhzjrRxZKobtDJOq+Z2msVt1ETfRv8WRWrBVX
      j95NLRWqyYtBa7/jSr9a3gCkYmEmFhKcOzuMWy3PJ6j58SLkck8/7kxpneHytQMoprUfbKF2
      kJRh7ZunmK/F/fN7lsaaXUCvpaFHlj+b5o3LP7M0Vj/RUN4A3JteYKAzxPh0jLMDDeVctO30
      0SyFm9buCdbOZ1EsjjXOHa19lqOujAEwqAxUU9vczuJ6GDjaAcAwUAyLDb5KGXtE28gcVWUM
      gEo+lWD+wX3UYHf5FiueStx8F8Wwdkm1qVaUeTaHX1k3gYZHhliKZBjqqi3nYsVTcI/eQ41b
      O5xZOH+uzLM5/MoagMrqegaq6wG+7QrncaPWWguEq6oKtbYGJff0n0xqVRVqba3lo0CuQJX1
      eR/U2GA1iqqiWtz8OorrXJJgDYq5T70LdV1//F+r3caehmmaGIZhS63dOsOVu5Yd63Rca+1W
      Z9/OAzwqateb8lGO7foFKoqy53YlpbDr53dca+1WZ99PhNn1AwVseUPaWQfs/fkdx1q71dm3
      TSAhjgJbPsq0fIrZ2QXyFp71tTOTRCTM5NQUW9kiyfgaiytRDBO2YqssrcbK0prd0AqsRx4u
      t5hLMTe3QF43yacTzC6E0QyTzGaMuaVVSq1WyCaJJZJgmkRXFpmcnCRTNNmIhFle38Dk4d+v
      xbdKrpVLJZiZnSNb0Mkm48wvraIbJsmNdRbCEUxMEpEVltfjJdUyTZON9TBzi6sYhkZ4YY6Z
      uXkKusna8jzRRBrT0AgvzrGRevoz/r9Ric3YKtOz82SLBrlknLnFFXTDJLURYT68jonJZnSF
      5bVv18mWa4Huj4/jqw5wd3KZc8PW7vzZxjSYnV3kRHsHLi3JncllAh4Nl8dk7t48freGJ3iJ
      Jn9pq7gRXWNuOUJNKMTU+F08VQHuTS2gJ5aprqrg/oJKdm2War/ClFrNQOveW4T//3RWwits
      5ExCNQPMLizQ2t6Nno4zubCG18hBoZmF9SwUwlSffw6/1+pmhM76WgyXojE5N0chtk5VpYtp
      xUVicYYqj86MoRFZXcdHFl/FeRqCFluZmzki0TRqfpU5t5u1yBbdbc3k1maZixfRF8fpa6lm
      NekmszTOiy9csPapbBpkc0XcRpYHU9MUE1Gq/W6mFDebS1NUew2mDYPoyhoVag5PxXkaa7w2
      NcbyBegfOIW7uLH7a/fKNMllt5idmSe5maa+o5O+zi6yiTmCbcOcHWhkbaP0R6XWN3fQUOMH
      swgVIQb6+1D0LXyBJgZG+ilEN6kKnaB/aIRiwtpVmA+56OrppcLz8E2d3YwyM79MMpujpa2L
      7t42ItNRukf66a6vI23xKtdHtdo62ygUDFoaK6kMdjI01EMyHqO2voOBM/3EJ9do6e6gp72d
      bM56ryJFraCjI0TO1UCDHzIbKyyE14kmCpw82UdzqJpELE/vyACtAS/WOpMCiouAT2F2bpna
      UCWVwQ5ODvWQTsSoCXUw+MwA8ck1mrvb6enoIJdNATZ9AxSzaVLJCAWsfjpuZ6IwePo8FWxy
      d3YDvDkCgSKeQBPR5TDhbIra9u6y1UNxo2U3SW4F0UwfhXScZFRFqfaT2oqQjBYx/S1lKlZg
      5Px38aQnuR8p4PMWMNgg2BJgPZzAlUrSXdJOpM7c9AyNXf3UVJrM3Z9gI1KBL1BNcjPO5rKB
      v7WGWGQLU01Q0VhvuZJp5JmZjzJ46iRmIc1zl14jtnCbXKGSlWiSXDJNQ7WHeCRJLJujy2oh
      Q8fw1fLCxWf4ZjqMmjdIRAN4/dUkN6IklqCytZZ4ZAvVncRd//CmI1u+AYZO9jE2vsjQkOXV
      205RyW6sMjqT5JlzZ+isMVjLV9De3EFnvUFEbaC9uvR8h6fHWVxe45vxGQYHOph4sMTJwX6G
      +lsZX0gx3NdGb0sdD9ZgqKumhEpFxr6+wdrKMlPLSZKRKe7FK7lwpouQK82Wq5GegWGqskt4
      Qu0ELG/+AIZJPpvim+u/4v58goGuWqZiJie7Wuio9zGfDjAy2E2TJ0VSCdFYa/0SCVMvsBlb
      5VdXr5DIqyxNjZJyNzN09hRKZIqalh7aeofJLI3T0jeE5bVSILEyy1d3Zjg5OMxgd4gH6xon
      u1roavQzm/RzerCTZl+WhFlLc+jhOslRIOFo0hxXOJoEQDiaBEA4mgRAOJoEQOxJfGmCj66O
      lueGtUKa2xPT5HMZ9D1eHKBrBQp/z9M3E4kEN+5be7QrHPO2KKJ8xm7d4s5ykVcuDbGxHiWV
      LxCs8JDKFGmo8zI5F2Hk1CDLMzMkNZXTI4MsT42R852gpVphObxGRaidzpCL0a+/4tqijie5
      Qqh3mOjKMrh9aNkM3UOnSa08IKFX0dccYHpxFbxB8rNf8PWqnz/6g98mPDVGdUs/nU21uLJz
      DPc9y+rcPdayHnoa/dyfW2fk1DCRpRniWzmq/G4UfyN1rhQLqxu09Y/gSoaZWUvh+sEPfvCD
      g/7hikPO1Pjk8+sMBDWyoU5+/r/eo+/caT758XucODnMJz/5EWP3JtjSFO6MLXNCXWdmOcx7
      f/Mpt78ax12ZRKts5/qXf8f67H2au3tZiqTxJMLgSjEWMZn/+ibNIYVbY9N88OGn3LkzTm1F
      hvHNGu6P/pKhjnrSriZciQnWjHoe/OoyHafPErvzGQ11Ad77bJIzQ118+uEv6Gqt4srNJe5P
      jBHUl1l2tTJ+7RqZ9fsE2oa5cuUKAS3ORx99LJtAYneFtVHWMz70Sh83vxylobWf3rZ6go2d
      DHa3UBNq4qU3/wHnTzZTyCSJbeXxVwXo7B3iH/3h71Lh8tDY3IbPDaoK8Vgc7TfuWqs70URt
      dZDmlkYUQ6Glc4B3/+E71Ad81De2EKjwUNfQQDoRAdVHciNCETcuBaprajBdXiikiW1s4VFh
      PZrAW+HF5w/S2BCkrrGNSi+YukZ0fQVvhZfRu8s8f+GUnAgTu9NySXL4qfKZJBIpFNVNsMZP
      cjNFVTBIIZ1gLbpJfY3Jj396i99552VaGuvZWA+T0T3U1/px+wJk00n8XpXVSAJ/sJZK1cDl
      caMpHox8Dn+lh2xRRcvE2cpDU6gKTa1Ey6cJVvlZDYepa2wlEVnBV3OCUHUl8c0I8WIVjcoW
      W0UXDdUe1mJJmluayWWzVLhNdHeAYjbFjY9/Qs3IW4z0taMlo6QKciZYHHFaPsN6Iktrk7Xr
      lSQAwtH+H3XE0dxIJOfaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Arrependimento em Todas as Estratégias 2' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Arrependimento por estratégia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Caracterizando o Arrependimento por Estratégia' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cluster Baixa Demanda' width='192'>
      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
      0fwfJOydx1pkoasAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Como as Estratégias Reagem aos seus Inputs' width='192'>
      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
      xwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Estratégia com maior número de casos de Lucro' width='192'>
      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
      uYxZkS0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Estratégias e Arrependimento' width='192'>
      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
      p720WIxctQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='104' name='Estratégias e Percentis de Arrependimento' width='192'>
      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
      z6dmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Landscape-Cenários' width='192'>
      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
      RRJfqH4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Lucro em Todas as Estratégias' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Lucro em Todas as Estratégias 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Lucro por Estratégia' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Número de Casos Com Performance Inaceitável' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tradeoff das Estratégias no Cenário de Baixa Demanda' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vulnerabilidade Estratégia A' width='192'>
      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
      +zAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vulnerabilidade Estratégia B' width='192'>
      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
      hNCfRi7ehNgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vulnerabilidade Estratégia C' width='192'>
      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
      5a7FRxf/H/tlTXoOvKjtAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
